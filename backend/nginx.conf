# NGINX configuration for VeeFriends Card Game
# Place this in /etc/nginx/sites-available/veefriends and symlink to /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name vf.studioboost.pro;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name vf.studioboost.pro;

    # SSL configuration
    ssl_certificate     /etc/letsencrypt/live/vf.studioboost.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vf.studioboost.pro/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Frontend static files (React app)
    location / {
        root /var/www/veefriends;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # Backend API and WebSocket
    location /api {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_cache off;
    }

    # Socket.IO endpoint with proper WebSocket support 
    location /socket.io/ {
        # Special config for Socket.IO in polling mode
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific settings
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;

        # XHR Polling specific settings
        proxy_buffering off;
        proxy_cache off;
        
        # Allow GET/POST requests for XHR polling
        proxy_method GET POST;
        proxy_redirect off;
        
        # Disable buffering so data is sent immediately
        proxy_set_header Connection "";
    }

    # Special test endpoint for Socket.IO connectivity 
    location /socket-test {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header Cache-Control 'no-store, no-cache';
    }

    # API documentation endpoint
    location /info {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}
